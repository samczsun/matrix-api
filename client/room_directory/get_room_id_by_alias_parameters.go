// Code generated by go-swagger; DO NOT EDIT.

package room_directory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetRoomIDByAliasParams creates a new GetRoomIDByAliasParams object
// with the default values initialized.
func NewGetRoomIDByAliasParams() *GetRoomIDByAliasParams {
	var ()
	return &GetRoomIDByAliasParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRoomIDByAliasParamsWithTimeout creates a new GetRoomIDByAliasParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRoomIDByAliasParamsWithTimeout(timeout time.Duration) *GetRoomIDByAliasParams {
	var ()
	return &GetRoomIDByAliasParams{

		timeout: timeout,
	}
}

// NewGetRoomIDByAliasParamsWithContext creates a new GetRoomIDByAliasParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRoomIDByAliasParamsWithContext(ctx context.Context) *GetRoomIDByAliasParams {
	var ()
	return &GetRoomIDByAliasParams{

		Context: ctx,
	}
}

// NewGetRoomIDByAliasParamsWithHTTPClient creates a new GetRoomIDByAliasParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRoomIDByAliasParamsWithHTTPClient(client *http.Client) *GetRoomIDByAliasParams {
	var ()
	return &GetRoomIDByAliasParams{
		HTTPClient: client,
	}
}

/*GetRoomIDByAliasParams contains all the parameters to send to the API endpoint
for the get room Id by alias operation typically these are written to a http.Request
*/
type GetRoomIDByAliasParams struct {

	/*RoomAlias
	  The room alias.

	*/
	RoomAlias string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get room Id by alias params
func (o *GetRoomIDByAliasParams) WithTimeout(timeout time.Duration) *GetRoomIDByAliasParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get room Id by alias params
func (o *GetRoomIDByAliasParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get room Id by alias params
func (o *GetRoomIDByAliasParams) WithContext(ctx context.Context) *GetRoomIDByAliasParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get room Id by alias params
func (o *GetRoomIDByAliasParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get room Id by alias params
func (o *GetRoomIDByAliasParams) WithHTTPClient(client *http.Client) *GetRoomIDByAliasParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get room Id by alias params
func (o *GetRoomIDByAliasParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRoomAlias adds the roomAlias to the get room Id by alias params
func (o *GetRoomIDByAliasParams) WithRoomAlias(roomAlias string) *GetRoomIDByAliasParams {
	o.SetRoomAlias(roomAlias)
	return o
}

// SetRoomAlias adds the roomAlias to the get room Id by alias params
func (o *GetRoomIDByAliasParams) SetRoomAlias(roomAlias string) {
	o.RoomAlias = roomAlias
}

// WriteToRequest writes these params to a swagger request
func (o *GetRoomIDByAliasParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param roomAlias
	if err := r.SetPathParam("roomAlias", o.RoomAlias); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
