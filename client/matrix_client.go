// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/samczsun/matrix-api/client/application_service_room_directory_management"
	"github.com/samczsun/matrix-api/client/capabilities"
	"github.com/samczsun/matrix-api/client/device_management"
	"github.com/samczsun/matrix-api/client/end_to_end_encryption"
	"github.com/samczsun/matrix-api/client/media"
	"github.com/samczsun/matrix-api/client/open_id"
	"github.com/samczsun/matrix-api/client/presence"
	"github.com/samczsun/matrix-api/client/push_notifications"
	"github.com/samczsun/matrix-api/client/read_markers"
	"github.com/samczsun/matrix-api/client/reporting_content"
	"github.com/samczsun/matrix-api/client/room_creation"
	"github.com/samczsun/matrix-api/client/room_directory"
	"github.com/samczsun/matrix-api/client/room_discovery"
	"github.com/samczsun/matrix-api/client/room_membership"
	"github.com/samczsun/matrix-api/client/room_participation"
	"github.com/samczsun/matrix-api/client/room_ugprades"
	"github.com/samczsun/matrix-api/client/search"
	"github.com/samczsun/matrix-api/client/send_to_device_messaging"
	"github.com/samczsun/matrix-api/client/server_administration"
	"github.com/samczsun/matrix-api/client/session_management"
	"github.com/samczsun/matrix-api/client/user_data"
	"github.com/samczsun/matrix-api/client/v_o_ip"
)

// Default matrix HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "matrix.org"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new matrix HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Matrix {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new matrix HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Matrix {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new matrix client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Matrix {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Matrix)
	cli.Transport = transport

	cli.ApplicationServiceRoomDirectoryManagement = application_service_room_directory_management.New(transport, formats)

	cli.Capabilities = capabilities.New(transport, formats)

	cli.DeviceManagement = device_management.New(transport, formats)

	cli.EndToEndEncryption = end_to_end_encryption.New(transport, formats)

	cli.Media = media.New(transport, formats)

	cli.OpenID = open_id.New(transport, formats)

	cli.Presence = presence.New(transport, formats)

	cli.PushNotifications = push_notifications.New(transport, formats)

	cli.ReadMarkers = read_markers.New(transport, formats)

	cli.ReportingContent = reporting_content.New(transport, formats)

	cli.RoomCreation = room_creation.New(transport, formats)

	cli.RoomDirectory = room_directory.New(transport, formats)

	cli.RoomDiscovery = room_discovery.New(transport, formats)

	cli.RoomMembership = room_membership.New(transport, formats)

	cli.RoomParticipation = room_participation.New(transport, formats)

	cli.RoomUgprades = room_ugprades.New(transport, formats)

	cli.Search = search.New(transport, formats)

	cli.SendToDeviceMessaging = send_to_device_messaging.New(transport, formats)

	cli.ServerAdministration = server_administration.New(transport, formats)

	cli.SessionManagement = session_management.New(transport, formats)

	cli.UserData = user_data.New(transport, formats)

	cli.VoIP = v_o_ip.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Matrix is a client for matrix
type Matrix struct {
	ApplicationServiceRoomDirectoryManagement *application_service_room_directory_management.Client

	Capabilities *capabilities.Client

	DeviceManagement *device_management.Client

	EndToEndEncryption *end_to_end_encryption.Client

	Media *media.Client

	OpenID *open_id.Client

	Presence *presence.Client

	PushNotifications *push_notifications.Client

	ReadMarkers *read_markers.Client

	ReportingContent *reporting_content.Client

	RoomCreation *room_creation.Client

	RoomDirectory *room_directory.Client

	RoomDiscovery *room_discovery.Client

	RoomMembership *room_membership.Client

	RoomParticipation *room_participation.Client

	RoomUgprades *room_ugprades.Client

	Search *search.Client

	SendToDeviceMessaging *send_to_device_messaging.Client

	ServerAdministration *server_administration.Client

	SessionManagement *session_management.Client

	UserData *user_data.Client

	VoIP *v_o_ip.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Matrix) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.ApplicationServiceRoomDirectoryManagement.SetTransport(transport)

	c.Capabilities.SetTransport(transport)

	c.DeviceManagement.SetTransport(transport)

	c.EndToEndEncryption.SetTransport(transport)

	c.Media.SetTransport(transport)

	c.OpenID.SetTransport(transport)

	c.Presence.SetTransport(transport)

	c.PushNotifications.SetTransport(transport)

	c.ReadMarkers.SetTransport(transport)

	c.ReportingContent.SetTransport(transport)

	c.RoomCreation.SetTransport(transport)

	c.RoomDirectory.SetTransport(transport)

	c.RoomDiscovery.SetTransport(transport)

	c.RoomMembership.SetTransport(transport)

	c.RoomParticipation.SetTransport(transport)

	c.RoomUgprades.SetTransport(transport)

	c.Search.SetTransport(transport)

	c.SendToDeviceMessaging.SetTransport(transport)

	c.ServerAdministration.SetTransport(transport)

	c.SessionManagement.SetTransport(transport)

	c.UserData.SetTransport(transport)

	c.VoIP.SetTransport(transport)

}
