// Code generated by go-swagger; DO NOT EDIT.

package room_participation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetEventContextParams creates a new GetEventContextParams object
// with the default values initialized.
func NewGetEventContextParams() *GetEventContextParams {
	var ()
	return &GetEventContextParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetEventContextParamsWithTimeout creates a new GetEventContextParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetEventContextParamsWithTimeout(timeout time.Duration) *GetEventContextParams {
	var ()
	return &GetEventContextParams{

		timeout: timeout,
	}
}

// NewGetEventContextParamsWithContext creates a new GetEventContextParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetEventContextParamsWithContext(ctx context.Context) *GetEventContextParams {
	var ()
	return &GetEventContextParams{

		Context: ctx,
	}
}

// NewGetEventContextParamsWithHTTPClient creates a new GetEventContextParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetEventContextParamsWithHTTPClient(client *http.Client) *GetEventContextParams {
	var ()
	return &GetEventContextParams{
		HTTPClient: client,
	}
}

/*GetEventContextParams contains all the parameters to send to the API endpoint
for the get event context operation typically these are written to a http.Request
*/
type GetEventContextParams struct {

	/*EventID
	  The event to get context around.

	*/
	EventID string
	/*Limit
	  The maximum number of events to return. Default: 10.

	*/
	Limit *int64
	/*RoomID
	  The room to get events from.

	*/
	RoomID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get event context params
func (o *GetEventContextParams) WithTimeout(timeout time.Duration) *GetEventContextParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get event context params
func (o *GetEventContextParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get event context params
func (o *GetEventContextParams) WithContext(ctx context.Context) *GetEventContextParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get event context params
func (o *GetEventContextParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get event context params
func (o *GetEventContextParams) WithHTTPClient(client *http.Client) *GetEventContextParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get event context params
func (o *GetEventContextParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEventID adds the eventID to the get event context params
func (o *GetEventContextParams) WithEventID(eventID string) *GetEventContextParams {
	o.SetEventID(eventID)
	return o
}

// SetEventID adds the eventId to the get event context params
func (o *GetEventContextParams) SetEventID(eventID string) {
	o.EventID = eventID
}

// WithLimit adds the limit to the get event context params
func (o *GetEventContextParams) WithLimit(limit *int64) *GetEventContextParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get event context params
func (o *GetEventContextParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithRoomID adds the roomID to the get event context params
func (o *GetEventContextParams) WithRoomID(roomID string) *GetEventContextParams {
	o.SetRoomID(roomID)
	return o
}

// SetRoomID adds the roomId to the get event context params
func (o *GetEventContextParams) SetRoomID(roomID string) {
	o.RoomID = roomID
}

// WriteToRequest writes these params to a swagger request
func (o *GetEventContextParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param eventId
	if err := r.SetPathParam("eventId", o.EventID); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	// path param roomId
	if err := r.SetPathParam("roomId", o.RoomID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
