// Code generated by go-swagger; DO NOT EDIT.

package room_participation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetRoomStateWithKeyReader is a Reader for the GetRoomStateWithKey structure.
type GetRoomStateWithKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoomStateWithKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoomStateWithKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetRoomStateWithKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoomStateWithKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRoomStateWithKeyOK creates a GetRoomStateWithKeyOK with default headers values
func NewGetRoomStateWithKeyOK() *GetRoomStateWithKeyOK {
	return &GetRoomStateWithKeyOK{}
}

/*GetRoomStateWithKeyOK handles this case with default header values.

The content of the state event.
*/
type GetRoomStateWithKeyOK struct {
	Payload interface{}
}

func (o *GetRoomStateWithKeyOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/rooms/{roomId}/state/{eventType}/{stateKey}][%d] getRoomStateWithKeyOK  %+v", 200, o.Payload)
}

func (o *GetRoomStateWithKeyOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRoomStateWithKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoomStateWithKeyForbidden creates a GetRoomStateWithKeyForbidden with default headers values
func NewGetRoomStateWithKeyForbidden() *GetRoomStateWithKeyForbidden {
	return &GetRoomStateWithKeyForbidden{}
}

/*GetRoomStateWithKeyForbidden handles this case with default header values.

You aren't a member of the room and weren't previously a member of the room.

*/
type GetRoomStateWithKeyForbidden struct {
}

func (o *GetRoomStateWithKeyForbidden) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/rooms/{roomId}/state/{eventType}/{stateKey}][%d] getRoomStateWithKeyForbidden ", 403)
}

func (o *GetRoomStateWithKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRoomStateWithKeyNotFound creates a GetRoomStateWithKeyNotFound with default headers values
func NewGetRoomStateWithKeyNotFound() *GetRoomStateWithKeyNotFound {
	return &GetRoomStateWithKeyNotFound{}
}

/*GetRoomStateWithKeyNotFound handles this case with default header values.

The room has no state with the given type or key.
*/
type GetRoomStateWithKeyNotFound struct {
}

func (o *GetRoomStateWithKeyNotFound) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/rooms/{roomId}/state/{eventType}/{stateKey}][%d] getRoomStateWithKeyNotFound ", 404)
}

func (o *GetRoomStateWithKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
