// Code generated by go-swagger; DO NOT EDIT.

package room_membership

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetJoinedRoomsReader is a Reader for the GetJoinedRooms structure.
type GetJoinedRoomsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJoinedRoomsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetJoinedRoomsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetJoinedRoomsOK creates a GetJoinedRoomsOK with default headers values
func NewGetJoinedRoomsOK() *GetJoinedRoomsOK {
	return &GetJoinedRoomsOK{}
}

/*GetJoinedRoomsOK handles this case with default header values.

A list of the rooms the user is in.
*/
type GetJoinedRoomsOK struct {
	Payload *GetJoinedRoomsOKBody
}

func (o *GetJoinedRoomsOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/joined_rooms][%d] getJoinedRoomsOK  %+v", 200, o.Payload)
}

func (o *GetJoinedRoomsOK) GetPayload() *GetJoinedRoomsOKBody {
	return o.Payload
}

func (o *GetJoinedRoomsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetJoinedRoomsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetJoinedRoomsOKBody get joined rooms o k body
swagger:model GetJoinedRoomsOKBody
*/
type GetJoinedRoomsOKBody struct {

	// The ID of each room in which the user has ``joined`` membership.
	// Required: true
	JoinedRooms []string `json:"joined_rooms"`
}

// Validate validates this get joined rooms o k body
func (o *GetJoinedRoomsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateJoinedRooms(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetJoinedRoomsOKBody) validateJoinedRooms(formats strfmt.Registry) error {

	if err := validate.Required("getJoinedRoomsOK"+"."+"joined_rooms", "body", o.JoinedRooms); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetJoinedRoomsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetJoinedRoomsOKBody) UnmarshalBinary(b []byte) error {
	var res GetJoinedRoomsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
