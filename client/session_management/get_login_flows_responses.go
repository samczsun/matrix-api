// Code generated by go-swagger; DO NOT EDIT.

package session_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetLoginFlowsReader is a Reader for the GetLoginFlows structure.
type GetLoginFlowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLoginFlowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLoginFlowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewGetLoginFlowsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLoginFlowsOK creates a GetLoginFlowsOK with default headers values
func NewGetLoginFlowsOK() *GetLoginFlowsOK {
	return &GetLoginFlowsOK{}
}

/*GetLoginFlowsOK handles this case with default header values.

The login types the homeserver supports
*/
type GetLoginFlowsOK struct {
	Payload *GetLoginFlowsOKBody
}

func (o *GetLoginFlowsOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/login][%d] getLoginFlowsOK  %+v", 200, o.Payload)
}

func (o *GetLoginFlowsOK) GetPayload() *GetLoginFlowsOKBody {
	return o.Payload
}

func (o *GetLoginFlowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetLoginFlowsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLoginFlowsTooManyRequests creates a GetLoginFlowsTooManyRequests with default headers values
func NewGetLoginFlowsTooManyRequests() *GetLoginFlowsTooManyRequests {
	return &GetLoginFlowsTooManyRequests{}
}

/*GetLoginFlowsTooManyRequests handles this case with default header values.

This request was rate-limited.
*/
type GetLoginFlowsTooManyRequests struct {
	Payload *GetLoginFlowsTooManyRequestsBody
}

func (o *GetLoginFlowsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/login][%d] getLoginFlowsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLoginFlowsTooManyRequests) GetPayload() *GetLoginFlowsTooManyRequestsBody {
	return o.Payload
}

func (o *GetLoginFlowsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetLoginFlowsTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*FlowsItems0 LoginFlow
swagger:model FlowsItems0
*/
type FlowsItems0 struct {

	// The login type. This is supplied as the ``type`` when
	// logging in.
	Type string `json:"type,omitempty"`
}

// Validate validates this flows items0
func (o *FlowsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlowsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlowsItems0) UnmarshalBinary(b []byte) error {
	var res FlowsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetLoginFlowsOKBody get login flows o k body
swagger:model GetLoginFlowsOKBody
*/
type GetLoginFlowsOKBody struct {

	// The homeserver's supported login types
	Flows []*FlowsItems0 `json:"flows"`
}

// Validate validates this get login flows o k body
func (o *GetLoginFlowsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFlows(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetLoginFlowsOKBody) validateFlows(formats strfmt.Registry) error {

	if swag.IsZero(o.Flows) { // not required
		return nil
	}

	for i := 0; i < len(o.Flows); i++ {
		if swag.IsZero(o.Flows[i]) { // not required
			continue
		}

		if o.Flows[i] != nil {
			if err := o.Flows[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getLoginFlowsOK" + "." + "flows" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetLoginFlowsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLoginFlowsOKBody) UnmarshalBinary(b []byte) error {
	var res GetLoginFlowsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetLoginFlowsTooManyRequestsBody The rate limit was reached for this request
swagger:model GetLoginFlowsTooManyRequestsBody
*/
type GetLoginFlowsTooManyRequestsBody struct {

	// The M_LIMIT_EXCEEDED error code
	// Required: true
	Errcode *string `json:"errcode"`

	// A human-readable error message.
	Error string `json:"error,omitempty"`

	// The amount of time in milliseconds the client should wait
	// before trying the request again.
	RetryAfterMs int64 `json:"retry_after_ms,omitempty"`
}

// Validate validates this get login flows too many requests body
func (o *GetLoginFlowsTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrcode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetLoginFlowsTooManyRequestsBody) validateErrcode(formats strfmt.Registry) error {

	if err := validate.Required("getLoginFlowsTooManyRequests"+"."+"errcode", "body", o.Errcode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetLoginFlowsTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLoginFlowsTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res GetLoginFlowsTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
