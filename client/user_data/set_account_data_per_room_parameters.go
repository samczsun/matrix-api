// Code generated by go-swagger; DO NOT EDIT.

package user_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSetAccountDataPerRoomParams creates a new SetAccountDataPerRoomParams object
// with the default values initialized.
func NewSetAccountDataPerRoomParams() *SetAccountDataPerRoomParams {
	var ()
	return &SetAccountDataPerRoomParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSetAccountDataPerRoomParamsWithTimeout creates a new SetAccountDataPerRoomParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSetAccountDataPerRoomParamsWithTimeout(timeout time.Duration) *SetAccountDataPerRoomParams {
	var ()
	return &SetAccountDataPerRoomParams{

		timeout: timeout,
	}
}

// NewSetAccountDataPerRoomParamsWithContext creates a new SetAccountDataPerRoomParams object
// with the default values initialized, and the ability to set a context for a request
func NewSetAccountDataPerRoomParamsWithContext(ctx context.Context) *SetAccountDataPerRoomParams {
	var ()
	return &SetAccountDataPerRoomParams{

		Context: ctx,
	}
}

// NewSetAccountDataPerRoomParamsWithHTTPClient creates a new SetAccountDataPerRoomParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSetAccountDataPerRoomParamsWithHTTPClient(client *http.Client) *SetAccountDataPerRoomParams {
	var ()
	return &SetAccountDataPerRoomParams{
		HTTPClient: client,
	}
}

/*SetAccountDataPerRoomParams contains all the parameters to send to the API endpoint
for the set account data per room operation typically these are written to a http.Request
*/
type SetAccountDataPerRoomParams struct {

	/*Content
	  The content of the account_data

	*/
	Content interface{}
	/*RoomID
	  The ID of the room to set account_data on.

	*/
	RoomID string
	/*Type
	  The event type of the account_data to set. Custom types should be
	namespaced to avoid clashes.

	*/
	Type string
	/*UserID
	  The ID of the user to set account_data for. The access token must be
	authorized to make requests for this user ID.

	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the set account data per room params
func (o *SetAccountDataPerRoomParams) WithTimeout(timeout time.Duration) *SetAccountDataPerRoomParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set account data per room params
func (o *SetAccountDataPerRoomParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set account data per room params
func (o *SetAccountDataPerRoomParams) WithContext(ctx context.Context) *SetAccountDataPerRoomParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set account data per room params
func (o *SetAccountDataPerRoomParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set account data per room params
func (o *SetAccountDataPerRoomParams) WithHTTPClient(client *http.Client) *SetAccountDataPerRoomParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set account data per room params
func (o *SetAccountDataPerRoomParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContent adds the content to the set account data per room params
func (o *SetAccountDataPerRoomParams) WithContent(content interface{}) *SetAccountDataPerRoomParams {
	o.SetContent(content)
	return o
}

// SetContent adds the content to the set account data per room params
func (o *SetAccountDataPerRoomParams) SetContent(content interface{}) {
	o.Content = content
}

// WithRoomID adds the roomID to the set account data per room params
func (o *SetAccountDataPerRoomParams) WithRoomID(roomID string) *SetAccountDataPerRoomParams {
	o.SetRoomID(roomID)
	return o
}

// SetRoomID adds the roomId to the set account data per room params
func (o *SetAccountDataPerRoomParams) SetRoomID(roomID string) {
	o.RoomID = roomID
}

// WithType adds the typeVar to the set account data per room params
func (o *SetAccountDataPerRoomParams) WithType(typeVar string) *SetAccountDataPerRoomParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the set account data per room params
func (o *SetAccountDataPerRoomParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WithUserID adds the userID to the set account data per room params
func (o *SetAccountDataPerRoomParams) WithUserID(userID string) *SetAccountDataPerRoomParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the set account data per room params
func (o *SetAccountDataPerRoomParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *SetAccountDataPerRoomParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Content != nil {
		if err := r.SetBodyParam(o.Content); err != nil {
			return err
		}
	}

	// path param roomId
	if err := r.SetPathParam("roomId", o.RoomID); err != nil {
		return err
	}

	// path param type
	if err := r.SetPathParam("type", o.Type); err != nil {
		return err
	}

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
