// Code generated by go-swagger; DO NOT EDIT.

package user_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// Delete3pidFromAccountReader is a Reader for the Delete3pidFromAccount structure.
type Delete3pidFromAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *Delete3pidFromAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDelete3pidFromAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDelete3pidFromAccountOK creates a Delete3pidFromAccountOK with default headers values
func NewDelete3pidFromAccountOK() *Delete3pidFromAccountOK {
	return &Delete3pidFromAccountOK{}
}

/*Delete3pidFromAccountOK handles this case with default header values.

The homeserver has disassociated the third party identifier from the
user.
*/
type Delete3pidFromAccountOK struct {
	Payload *Delete3pidFromAccountOKBody
}

func (o *Delete3pidFromAccountOK) Error() string {
	return fmt.Sprintf("[POST /_matrix/client/unstable/account/3pid/delete][%d] delete3pidFromAccountOK  %+v", 200, o.Payload)
}

func (o *Delete3pidFromAccountOK) GetPayload() *Delete3pidFromAccountOKBody {
	return o.Payload
}

func (o *Delete3pidFromAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(Delete3pidFromAccountOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*Delete3pidFromAccountBody delete3pid from account body
swagger:model Delete3pidFromAccountBody
*/
type Delete3pidFromAccountBody struct {

	// The third party address being removed.
	// Required: true
	Address *string `json:"address"`

	// The identity server to unbind from. If not provided, the homeserver
	// MUST use the ``id_server`` the identifier was added through. If the
	// homeserver does not know the original ``id_server``, it MUST return
	// a ``id_server_unbind_result`` of ``no-support``.
	IDServer string `json:"id_server,omitempty"`

	// The medium of the third party identifier being removed.
	// Required: true
	// Enum: [email msisdn]
	Medium *string `json:"medium"`
}

// Validate validates this delete3pid from account body
func (o *Delete3pidFromAccountBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMedium(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *Delete3pidFromAccountBody) validateAddress(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"address", "body", o.Address); err != nil {
		return err
	}

	return nil
}

var delete3pidFromAccountBodyTypeMediumPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["email","msisdn"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		delete3pidFromAccountBodyTypeMediumPropEnum = append(delete3pidFromAccountBodyTypeMediumPropEnum, v)
	}
}

const (

	// Delete3pidFromAccountBodyMediumEmail captures enum value "email"
	Delete3pidFromAccountBodyMediumEmail string = "email"

	// Delete3pidFromAccountBodyMediumMsisdn captures enum value "msisdn"
	Delete3pidFromAccountBodyMediumMsisdn string = "msisdn"
)

// prop value enum
func (o *Delete3pidFromAccountBody) validateMediumEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, delete3pidFromAccountBodyTypeMediumPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *Delete3pidFromAccountBody) validateMedium(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"medium", "body", o.Medium); err != nil {
		return err
	}

	// value enum
	if err := o.validateMediumEnum("body"+"."+"medium", "body", *o.Medium); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *Delete3pidFromAccountBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *Delete3pidFromAccountBody) UnmarshalBinary(b []byte) error {
	var res Delete3pidFromAccountBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*Delete3pidFromAccountOKBody delete3pid from account o k body
swagger:model Delete3pidFromAccountOKBody
*/
type Delete3pidFromAccountOKBody struct {

	// An indicator as to whether or not the homeserver was able to unbind
	// the 3PID from the identity server. ``success`` indicates that the
	// indentity server has unbound the identifier whereas ``no-support``
	// indicates that the identity server refuses to support the request
	// or the homeserver was not able to determine an identity server to
	// unbind from.
	// Required: true
	// Enum: [no-support success]
	IDServerUnbindResult *string `json:"id_server_unbind_result"`
}

// Validate validates this delete3pid from account o k body
func (o *Delete3pidFromAccountOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIDServerUnbindResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var delete3pidFromAccountOKBodyTypeIDServerUnbindResultPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["no-support","success"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		delete3pidFromAccountOKBodyTypeIDServerUnbindResultPropEnum = append(delete3pidFromAccountOKBodyTypeIDServerUnbindResultPropEnum, v)
	}
}

const (

	// Delete3pidFromAccountOKBodyIDServerUnbindResultNoSupport captures enum value "no-support"
	Delete3pidFromAccountOKBodyIDServerUnbindResultNoSupport string = "no-support"

	// Delete3pidFromAccountOKBodyIDServerUnbindResultSuccess captures enum value "success"
	Delete3pidFromAccountOKBodyIDServerUnbindResultSuccess string = "success"
)

// prop value enum
func (o *Delete3pidFromAccountOKBody) validateIDServerUnbindResultEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, delete3pidFromAccountOKBodyTypeIDServerUnbindResultPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *Delete3pidFromAccountOKBody) validateIDServerUnbindResult(formats strfmt.Registry) error {

	if err := validate.Required("delete3pidFromAccountOK"+"."+"id_server_unbind_result", "body", o.IDServerUnbindResult); err != nil {
		return err
	}

	// value enum
	if err := o.validateIDServerUnbindResultEnum("delete3pidFromAccountOK"+"."+"id_server_unbind_result", "body", *o.IDServerUnbindResult); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *Delete3pidFromAccountOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *Delete3pidFromAccountOKBody) UnmarshalBinary(b []byte) error {
	var res Delete3pidFromAccountOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
