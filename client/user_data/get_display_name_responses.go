// Code generated by go-swagger; DO NOT EDIT.

package user_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// GetDisplayNameReader is a Reader for the GetDisplayName structure.
type GetDisplayNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDisplayNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDisplayNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetDisplayNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDisplayNameOK creates a GetDisplayNameOK with default headers values
func NewGetDisplayNameOK() *GetDisplayNameOK {
	return &GetDisplayNameOK{}
}

/*GetDisplayNameOK handles this case with default header values.

The display name for this user.
*/
type GetDisplayNameOK struct {
	Payload *GetDisplayNameOKBody
}

func (o *GetDisplayNameOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/profile/{userId}/displayname][%d] getDisplayNameOK  %+v", 200, o.Payload)
}

func (o *GetDisplayNameOK) GetPayload() *GetDisplayNameOKBody {
	return o.Payload
}

func (o *GetDisplayNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetDisplayNameOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDisplayNameNotFound creates a GetDisplayNameNotFound with default headers values
func NewGetDisplayNameNotFound() *GetDisplayNameNotFound {
	return &GetDisplayNameNotFound{}
}

/*GetDisplayNameNotFound handles this case with default header values.

There is no display name for this user or this user does not exist.
*/
type GetDisplayNameNotFound struct {
}

func (o *GetDisplayNameNotFound) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/profile/{userId}/displayname][%d] getDisplayNameNotFound ", 404)
}

func (o *GetDisplayNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetDisplayNameOKBody get display name o k body
swagger:model GetDisplayNameOKBody
*/
type GetDisplayNameOKBody struct {

	// The user's display name if they have set one, otherwise not present.
	Displayname string `json:"displayname,omitempty"`
}

// Validate validates this get display name o k body
func (o *GetDisplayNameOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDisplayNameOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDisplayNameOKBody) UnmarshalBinary(b []byte) error {
	var res GetDisplayNameOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
