// Code generated by go-swagger; DO NOT EDIT.

package user_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetAccount3PIDsReader is a Reader for the GetAccount3PIDs structure.
type GetAccount3PIDsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccount3PIDsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccount3PIDsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccount3PIDsOK creates a GetAccount3PIDsOK with default headers values
func NewGetAccount3PIDsOK() *GetAccount3PIDsOK {
	return &GetAccount3PIDsOK{}
}

/*GetAccount3PIDsOK handles this case with default header values.

The lookup was successful.
*/
type GetAccount3PIDsOK struct {
	Payload *GetAccount3PIDsOKBody
}

func (o *GetAccount3PIDsOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/account/3pid][%d] getAccount3PIDsOK  %+v", 200, o.Payload)
}

func (o *GetAccount3PIDsOK) GetPayload() *GetAccount3PIDsOKBody {
	return o.Payload
}

func (o *GetAccount3PIDsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAccount3PIDsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAccount3PIDsOKBody get account3 p i ds o k body
swagger:model GetAccount3PIDsOKBody
*/
type GetAccount3PIDsOKBody struct {

	// threepids
	Threepids []*ThreepidsItems0 `json:"threepids"`
}

// Validate validates this get account3 p i ds o k body
func (o *GetAccount3PIDsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateThreepids(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAccount3PIDsOKBody) validateThreepids(formats strfmt.Registry) error {

	if swag.IsZero(o.Threepids) { // not required
		return nil
	}

	for i := 0; i < len(o.Threepids); i++ {
		if swag.IsZero(o.Threepids[i]) { // not required
			continue
		}

		if o.Threepids[i] != nil {
			if err := o.Threepids[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAccount3PIDsOK" + "." + "threepids" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAccount3PIDsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAccount3PIDsOKBody) UnmarshalBinary(b []byte) error {
	var res GetAccount3PIDsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ThreepidsItems0 Third party identifier
swagger:model ThreepidsItems0
*/
type ThreepidsItems0 struct {

	// The timestamp, in milliseconds, when the homeserver associated the third party identifier with the user.
	// Required: true
	AddedAt *int64 `json:"added_at"`

	// The third party identifier address.
	// Required: true
	Address *string `json:"address"`

	// The medium of the third party identifier.
	// Required: true
	// Enum: [email msisdn]
	Medium *string `json:"medium"`

	// The timestamp, in milliseconds, when the identifier was
	// validated by the identity server.
	// Required: true
	ValidatedAt *int64 `json:"validated_at"`
}

// Validate validates this threepids items0
func (o *ThreepidsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMedium(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValidatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ThreepidsItems0) validateAddedAt(formats strfmt.Registry) error {

	if err := validate.Required("added_at", "body", o.AddedAt); err != nil {
		return err
	}

	return nil
}

func (o *ThreepidsItems0) validateAddress(formats strfmt.Registry) error {

	if err := validate.Required("address", "body", o.Address); err != nil {
		return err
	}

	return nil
}

var threepidsItems0TypeMediumPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["email","msisdn"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		threepidsItems0TypeMediumPropEnum = append(threepidsItems0TypeMediumPropEnum, v)
	}
}

const (

	// ThreepidsItems0MediumEmail captures enum value "email"
	ThreepidsItems0MediumEmail string = "email"

	// ThreepidsItems0MediumMsisdn captures enum value "msisdn"
	ThreepidsItems0MediumMsisdn string = "msisdn"
)

// prop value enum
func (o *ThreepidsItems0) validateMediumEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, threepidsItems0TypeMediumPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *ThreepidsItems0) validateMedium(formats strfmt.Registry) error {

	if err := validate.Required("medium", "body", o.Medium); err != nil {
		return err
	}

	// value enum
	if err := o.validateMediumEnum("medium", "body", *o.Medium); err != nil {
		return err
	}

	return nil
}

func (o *ThreepidsItems0) validateValidatedAt(formats strfmt.Registry) error {

	if err := validate.Required("validated_at", "body", o.ValidatedAt); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ThreepidsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ThreepidsItems0) UnmarshalBinary(b []byte) error {
	var res ThreepidsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
