// Code generated by go-swagger; DO NOT EDIT.

package user_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetTokenOwnerReader is a Reader for the GetTokenOwner structure.
type GetTokenOwnerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTokenOwnerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTokenOwnerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTokenOwnerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTokenOwnerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTokenOwnerTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTokenOwnerOK creates a GetTokenOwnerOK with default headers values
func NewGetTokenOwnerOK() *GetTokenOwnerOK {
	return &GetTokenOwnerOK{}
}

/*GetTokenOwnerOK handles this case with default header values.

The token belongs to a known user.
*/
type GetTokenOwnerOK struct {
	Payload *GetTokenOwnerOKBody
}

func (o *GetTokenOwnerOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/account/whoami][%d] getTokenOwnerOK  %+v", 200, o.Payload)
}

func (o *GetTokenOwnerOK) GetPayload() *GetTokenOwnerOKBody {
	return o.Payload
}

func (o *GetTokenOwnerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTokenOwnerOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenOwnerUnauthorized creates a GetTokenOwnerUnauthorized with default headers values
func NewGetTokenOwnerUnauthorized() *GetTokenOwnerUnauthorized {
	return &GetTokenOwnerUnauthorized{}
}

/*GetTokenOwnerUnauthorized handles this case with default header values.

The token is not recognised
*/
type GetTokenOwnerUnauthorized struct {
	Payload *GetTokenOwnerUnauthorizedBody
}

func (o *GetTokenOwnerUnauthorized) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/account/whoami][%d] getTokenOwnerUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTokenOwnerUnauthorized) GetPayload() *GetTokenOwnerUnauthorizedBody {
	return o.Payload
}

func (o *GetTokenOwnerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTokenOwnerUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenOwnerForbidden creates a GetTokenOwnerForbidden with default headers values
func NewGetTokenOwnerForbidden() *GetTokenOwnerForbidden {
	return &GetTokenOwnerForbidden{}
}

/*GetTokenOwnerForbidden handles this case with default header values.

The appservice cannot masquerade as the user or has not registered them.
*/
type GetTokenOwnerForbidden struct {
	Payload *GetTokenOwnerForbiddenBody
}

func (o *GetTokenOwnerForbidden) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/account/whoami][%d] getTokenOwnerForbidden  %+v", 403, o.Payload)
}

func (o *GetTokenOwnerForbidden) GetPayload() *GetTokenOwnerForbiddenBody {
	return o.Payload
}

func (o *GetTokenOwnerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTokenOwnerForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenOwnerTooManyRequests creates a GetTokenOwnerTooManyRequests with default headers values
func NewGetTokenOwnerTooManyRequests() *GetTokenOwnerTooManyRequests {
	return &GetTokenOwnerTooManyRequests{}
}

/*GetTokenOwnerTooManyRequests handles this case with default header values.

This request was rate-limited.
*/
type GetTokenOwnerTooManyRequests struct {
	Payload *GetTokenOwnerTooManyRequestsBody
}

func (o *GetTokenOwnerTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /_matrix/client/unstable/account/whoami][%d] getTokenOwnerTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTokenOwnerTooManyRequests) GetPayload() *GetTokenOwnerTooManyRequestsBody {
	return o.Payload
}

func (o *GetTokenOwnerTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTokenOwnerTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetTokenOwnerForbiddenBody A Matrix-level Error
swagger:model GetTokenOwnerForbiddenBody
*/
type GetTokenOwnerForbiddenBody struct {

	// An error code.
	// Required: true
	Errcode *string `json:"errcode"`

	// A human-readable error message.
	Error string `json:"error,omitempty"`
}

// Validate validates this get token owner forbidden body
func (o *GetTokenOwnerForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrcode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTokenOwnerForbiddenBody) validateErrcode(formats strfmt.Registry) error {

	if err := validate.Required("getTokenOwnerForbidden"+"."+"errcode", "body", o.Errcode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTokenOwnerForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTokenOwnerForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetTokenOwnerForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetTokenOwnerOKBody get token owner o k body
swagger:model GetTokenOwnerOKBody
*/
type GetTokenOwnerOKBody struct {

	// The user id that owns the access token.
	// Required: true
	UserID *string `json:"user_id"`
}

// Validate validates this get token owner o k body
func (o *GetTokenOwnerOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateUserID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTokenOwnerOKBody) validateUserID(formats strfmt.Registry) error {

	if err := validate.Required("getTokenOwnerOK"+"."+"user_id", "body", o.UserID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTokenOwnerOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTokenOwnerOKBody) UnmarshalBinary(b []byte) error {
	var res GetTokenOwnerOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetTokenOwnerTooManyRequestsBody The rate limit was reached for this request
swagger:model GetTokenOwnerTooManyRequestsBody
*/
type GetTokenOwnerTooManyRequestsBody struct {

	// The M_LIMIT_EXCEEDED error code
	// Required: true
	Errcode *string `json:"errcode"`

	// A human-readable error message.
	Error string `json:"error,omitempty"`

	// The amount of time in milliseconds the client should wait
	// before trying the request again.
	RetryAfterMs int64 `json:"retry_after_ms,omitempty"`
}

// Validate validates this get token owner too many requests body
func (o *GetTokenOwnerTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrcode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTokenOwnerTooManyRequestsBody) validateErrcode(formats strfmt.Registry) error {

	if err := validate.Required("getTokenOwnerTooManyRequests"+"."+"errcode", "body", o.Errcode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTokenOwnerTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTokenOwnerTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res GetTokenOwnerTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetTokenOwnerUnauthorizedBody A Matrix-level Error
swagger:model GetTokenOwnerUnauthorizedBody
*/
type GetTokenOwnerUnauthorizedBody struct {

	// An error code.
	// Required: true
	Errcode *string `json:"errcode"`

	// A human-readable error message.
	Error string `json:"error,omitempty"`
}

// Validate validates this get token owner unauthorized body
func (o *GetTokenOwnerUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrcode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTokenOwnerUnauthorizedBody) validateErrcode(formats strfmt.Registry) error {

	if err := validate.Required("getTokenOwnerUnauthorized"+"."+"errcode", "body", o.Errcode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTokenOwnerUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTokenOwnerUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetTokenOwnerUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
