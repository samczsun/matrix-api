// Code generated by go-swagger; DO NOT EDIT.

package media

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetContentOverrideNameReader is a Reader for the GetContentOverrideName structure.
type GetContentOverrideNameReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetContentOverrideNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentOverrideNameOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewGetContentOverrideNameTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewGetContentOverrideNameBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetContentOverrideNameOK creates a GetContentOverrideNameOK with default headers values
func NewGetContentOverrideNameOK(writer io.Writer) *GetContentOverrideNameOK {
	return &GetContentOverrideNameOK{
		Payload: writer,
	}
}

/*GetContentOverrideNameOK handles this case with default header values.

The content that was previously uploaded.
*/
type GetContentOverrideNameOK struct {
	/*The ``fileName`` requested or the name of the file that was previously
	uploaded, if set.
	*/
	ContentDisposition string
	/*The content type of the file that was previously uploaded.
	 */
	ContentType string

	Payload io.Writer
}

func (o *GetContentOverrideNameOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/media/unstable/download/{serverName}/{mediaId}/{fileName}][%d] getContentOverrideNameOK  %+v", 200, o.Payload)
}

func (o *GetContentOverrideNameOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetContentOverrideNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Disposition
	o.ContentDisposition = response.GetHeader("Content-Disposition")

	// response header Content-Type
	o.ContentType = response.GetHeader("Content-Type")

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentOverrideNameTooManyRequests creates a GetContentOverrideNameTooManyRequests with default headers values
func NewGetContentOverrideNameTooManyRequests() *GetContentOverrideNameTooManyRequests {
	return &GetContentOverrideNameTooManyRequests{}
}

/*GetContentOverrideNameTooManyRequests handles this case with default header values.

This request was rate-limited.
*/
type GetContentOverrideNameTooManyRequests struct {
	Payload *GetContentOverrideNameTooManyRequestsBody
}

func (o *GetContentOverrideNameTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /_matrix/media/unstable/download/{serverName}/{mediaId}/{fileName}][%d] getContentOverrideNameTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetContentOverrideNameTooManyRequests) GetPayload() *GetContentOverrideNameTooManyRequestsBody {
	return o.Payload
}

func (o *GetContentOverrideNameTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetContentOverrideNameTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentOverrideNameBadGateway creates a GetContentOverrideNameBadGateway with default headers values
func NewGetContentOverrideNameBadGateway() *GetContentOverrideNameBadGateway {
	return &GetContentOverrideNameBadGateway{}
}

/*GetContentOverrideNameBadGateway handles this case with default header values.

The content is too large for the server to serve.
*/
type GetContentOverrideNameBadGateway struct {
	Payload *GetContentOverrideNameBadGatewayBody
}

func (o *GetContentOverrideNameBadGateway) Error() string {
	return fmt.Sprintf("[GET /_matrix/media/unstable/download/{serverName}/{mediaId}/{fileName}][%d] getContentOverrideNameBadGateway  %+v", 502, o.Payload)
}

func (o *GetContentOverrideNameBadGateway) GetPayload() *GetContentOverrideNameBadGatewayBody {
	return o.Payload
}

func (o *GetContentOverrideNameBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetContentOverrideNameBadGatewayBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetContentOverrideNameBadGatewayBody A Matrix-level Error
swagger:model GetContentOverrideNameBadGatewayBody
*/
type GetContentOverrideNameBadGatewayBody struct {

	// An error code.
	// Required: true
	Errcode *string `json:"errcode"`

	// A human-readable error message.
	Error string `json:"error,omitempty"`
}

// Validate validates this get content override name bad gateway body
func (o *GetContentOverrideNameBadGatewayBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrcode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetContentOverrideNameBadGatewayBody) validateErrcode(formats strfmt.Registry) error {

	if err := validate.Required("getContentOverrideNameBadGateway"+"."+"errcode", "body", o.Errcode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetContentOverrideNameBadGatewayBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContentOverrideNameBadGatewayBody) UnmarshalBinary(b []byte) error {
	var res GetContentOverrideNameBadGatewayBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetContentOverrideNameTooManyRequestsBody The rate limit was reached for this request
swagger:model GetContentOverrideNameTooManyRequestsBody
*/
type GetContentOverrideNameTooManyRequestsBody struct {

	// The M_LIMIT_EXCEEDED error code
	// Required: true
	Errcode *string `json:"errcode"`

	// A human-readable error message.
	Error string `json:"error,omitempty"`

	// The amount of time in milliseconds the client should wait
	// before trying the request again.
	RetryAfterMs int64 `json:"retry_after_ms,omitempty"`
}

// Validate validates this get content override name too many requests body
func (o *GetContentOverrideNameTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrcode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetContentOverrideNameTooManyRequestsBody) validateErrcode(formats strfmt.Registry) error {

	if err := validate.Required("getContentOverrideNameTooManyRequests"+"."+"errcode", "body", o.Errcode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetContentOverrideNameTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContentOverrideNameTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res GetContentOverrideNameTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
