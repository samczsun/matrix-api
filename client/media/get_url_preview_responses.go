// Code generated by go-swagger; DO NOT EDIT.

package media

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetURLPreviewReader is a Reader for the GetURLPreview structure.
type GetURLPreviewReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetURLPreviewReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetURLPreviewOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewGetURLPreviewTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetURLPreviewOK creates a GetURLPreviewOK with default headers values
func NewGetURLPreviewOK() *GetURLPreviewOK {
	return &GetURLPreviewOK{}
}

/*GetURLPreviewOK handles this case with default header values.

The OpenGraph data for the URL, which may be empty. Some values are
replaced with matrix equivalents if they are provided in the response.
The differences from the OpenGraph protocol are described here.
*/
type GetURLPreviewOK struct {
	Payload *GetURLPreviewOKBody
}

func (o *GetURLPreviewOK) Error() string {
	return fmt.Sprintf("[GET /_matrix/media/unstable/preview_url][%d] getUrlPreviewOK  %+v", 200, o.Payload)
}

func (o *GetURLPreviewOK) GetPayload() *GetURLPreviewOKBody {
	return o.Payload
}

func (o *GetURLPreviewOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetURLPreviewOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetURLPreviewTooManyRequests creates a GetURLPreviewTooManyRequests with default headers values
func NewGetURLPreviewTooManyRequests() *GetURLPreviewTooManyRequests {
	return &GetURLPreviewTooManyRequests{}
}

/*GetURLPreviewTooManyRequests handles this case with default header values.

This request was rate-limited.
*/
type GetURLPreviewTooManyRequests struct {
	Payload *GetURLPreviewTooManyRequestsBody
}

func (o *GetURLPreviewTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /_matrix/media/unstable/preview_url][%d] getUrlPreviewTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetURLPreviewTooManyRequests) GetPayload() *GetURLPreviewTooManyRequestsBody {
	return o.Payload
}

func (o *GetURLPreviewTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetURLPreviewTooManyRequestsBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetURLPreviewOKBody get URL preview o k body
swagger:model GetURLPreviewOKBody
*/
type GetURLPreviewOKBody struct {

	// The byte-size of the image. Omitted if there is no image attached.
	MatrixImageSize int64 `json:"matrix:image:size,omitempty"`

	// An `MXC URI`_ to the image. Omitted if there is no image.
	OgImage string `json:"og:image,omitempty"`
}

// Validate validates this get URL preview o k body
func (o *GetURLPreviewOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetURLPreviewOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetURLPreviewOKBody) UnmarshalBinary(b []byte) error {
	var res GetURLPreviewOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetURLPreviewTooManyRequestsBody The rate limit was reached for this request
swagger:model GetURLPreviewTooManyRequestsBody
*/
type GetURLPreviewTooManyRequestsBody struct {

	// The M_LIMIT_EXCEEDED error code
	// Required: true
	Errcode *string `json:"errcode"`

	// A human-readable error message.
	Error string `json:"error,omitempty"`

	// The amount of time in milliseconds the client should wait
	// before trying the request again.
	RetryAfterMs int64 `json:"retry_after_ms,omitempty"`
}

// Validate validates this get URL preview too many requests body
func (o *GetURLPreviewTooManyRequestsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrcode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetURLPreviewTooManyRequestsBody) validateErrcode(formats strfmt.Registry) error {

	if err := validate.Required("getUrlPreviewTooManyRequests"+"."+"errcode", "body", o.Errcode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetURLPreviewTooManyRequestsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetURLPreviewTooManyRequestsBody) UnmarshalBinary(b []byte) error {
	var res GetURLPreviewTooManyRequestsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
