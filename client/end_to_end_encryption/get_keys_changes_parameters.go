// Code generated by go-swagger; DO NOT EDIT.

package end_to_end_encryption

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetKeysChangesParams creates a new GetKeysChangesParams object
// with the default values initialized.
func NewGetKeysChangesParams() *GetKeysChangesParams {
	var ()
	return &GetKeysChangesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetKeysChangesParamsWithTimeout creates a new GetKeysChangesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetKeysChangesParamsWithTimeout(timeout time.Duration) *GetKeysChangesParams {
	var ()
	return &GetKeysChangesParams{

		timeout: timeout,
	}
}

// NewGetKeysChangesParamsWithContext creates a new GetKeysChangesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetKeysChangesParamsWithContext(ctx context.Context) *GetKeysChangesParams {
	var ()
	return &GetKeysChangesParams{

		Context: ctx,
	}
}

// NewGetKeysChangesParamsWithHTTPClient creates a new GetKeysChangesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetKeysChangesParamsWithHTTPClient(client *http.Client) *GetKeysChangesParams {
	var ()
	return &GetKeysChangesParams{
		HTTPClient: client,
	}
}

/*GetKeysChangesParams contains all the parameters to send to the API endpoint
for the get keys changes operation typically these are written to a http.Request
*/
type GetKeysChangesParams struct {

	/*From
	  The desired start point of the list. Should be the ``next_batch`` field
	from a response to an earlier call to |/sync|. Users who have not
	uploaded new device identity keys since this point, nor deleted
	existing devices with identity keys since then, will be excluded
	from the results.

	*/
	From string
	/*To
	  The desired end point of the list. Should be the ``next_batch``
	field from a recent call to |/sync| - typically the most recent
	such call. This may be used by the server as a hint to check its
	caches are up to date.

	*/
	To string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get keys changes params
func (o *GetKeysChangesParams) WithTimeout(timeout time.Duration) *GetKeysChangesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get keys changes params
func (o *GetKeysChangesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get keys changes params
func (o *GetKeysChangesParams) WithContext(ctx context.Context) *GetKeysChangesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get keys changes params
func (o *GetKeysChangesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get keys changes params
func (o *GetKeysChangesParams) WithHTTPClient(client *http.Client) *GetKeysChangesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get keys changes params
func (o *GetKeysChangesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFrom adds the from to the get keys changes params
func (o *GetKeysChangesParams) WithFrom(from string) *GetKeysChangesParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get keys changes params
func (o *GetKeysChangesParams) SetFrom(from string) {
	o.From = from
}

// WithTo adds the to to the get keys changes params
func (o *GetKeysChangesParams) WithTo(to string) *GetKeysChangesParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the get keys changes params
func (o *GetKeysChangesParams) SetTo(to string) {
	o.To = to
}

// WriteToRequest writes these params to a swagger request
func (o *GetKeysChangesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param from
	qrFrom := o.From
	qFrom := qrFrom
	if qFrom != "" {
		if err := r.SetQueryParam("from", qFrom); err != nil {
			return err
		}
	}

	// query param to
	qrTo := o.To
	qTo := qrTo
	if qTo != "" {
		if err := r.SetQueryParam("to", qTo); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
